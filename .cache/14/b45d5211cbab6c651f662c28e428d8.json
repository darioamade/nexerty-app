{"id":"scroll.js","dependencies":[{"name":"/Users/darioamade/Desktop/Node-Real-state-agency/package.json","includedInParent":true,"mtime":1618937045506}],"generated":{"js":"/* function qs(selector, all = false) {\n  return all\n    ? document.querySelectorAll(selector)\n    : document.querySelector(selector);\n}\n\nconst sections = qs('.section', true);\nconst timeline = qs('.timeline');\nconst line = qs('.line');\nline.style.bottom = `calc(100% - 20px)`;\nlet prevScrollY = window.scrollY;\nlet up, down;\nlet full = false;\nlet set = 0;\nconst targetY = window.innerHeight * 0.8;\n\nfunction scrollHandler(e) {\n  const { scrollY } = window;\n  up = scrollY < prevScrollY;\n  down = !up;\n  const timelineRect = timeline.getBoundingClientRect();\n  const lineRect = line.getBoundingClientRect(); // const lineHeight = lineRect.bottom - lineRect.top;\n\n  const dist = targetY - timelineRect.top;\n//   console.log(dist);\n\n  if (down && !full) {\n    set = Math.max(set, dist);\n    line.style.bottom = `calc(100% - ${set}px)`;\n  }\n\n  if (dist > timeline.offsetHeight + 50 && !full) {\n    full = true;\n    line.style.bottom = `-50px`;\n  }\n\n  sections.forEach((item) => {\n    // console.log(item);\n    const rect = item.getBoundingClientRect(); //     console.log(rect);\n\n    if (rect.top + item.offsetHeight / 5 < targetY) {\n      item.classList.add('show-me');\n    }\n  }); // console.log(up, down);\n\n  prevScrollY = window.scrollY;\n}\n\nscrollHandler();\nline.style.display = 'block';\nwindow.addEventListener('scroll', scrollHandler);\n */"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":1,"column":0},"source":"scroll.js","original":{"line":1,"column":0}}],"sources":{"scroll.js":"/* function qs(selector, all = false) {\n  return all\n    ? document.querySelectorAll(selector)\n    : document.querySelector(selector);\n}\n\nconst sections = qs('.section', true);\nconst timeline = qs('.timeline');\nconst line = qs('.line');\nline.style.bottom = `calc(100% - 20px)`;\nlet prevScrollY = window.scrollY;\nlet up, down;\nlet full = false;\nlet set = 0;\nconst targetY = window.innerHeight * 0.8;\n\nfunction scrollHandler(e) {\n  const { scrollY } = window;\n  up = scrollY < prevScrollY;\n  down = !up;\n  const timelineRect = timeline.getBoundingClientRect();\n  const lineRect = line.getBoundingClientRect(); // const lineHeight = lineRect.bottom - lineRect.top;\n\n  const dist = targetY - timelineRect.top;\n//   console.log(dist);\n\n  if (down && !full) {\n    set = Math.max(set, dist);\n    line.style.bottom = `calc(100% - ${set}px)`;\n  }\n\n  if (dist > timeline.offsetHeight + 50 && !full) {\n    full = true;\n    line.style.bottom = `-50px`;\n  }\n\n  sections.forEach((item) => {\n    // console.log(item);\n    const rect = item.getBoundingClientRect(); //     console.log(rect);\n\n    if (rect.top + item.offsetHeight / 5 < targetY) {\n      item.classList.add('show-me');\n    }\n  }); // console.log(up, down);\n\n  prevScrollY = window.scrollY;\n}\n\nscrollHandler();\nline.style.display = 'block';\nwindow.addEventListener('scroll', scrollHandler);\n */"},"lineCount":null}},"error":null,"hash":"3cb3473bb52cd3926e119cf04ebe7e45","cacheData":{"env":{}}}